---
- name: Pull latest scraper code and run it on all machines
  hosts: scrapers

  pre_tasks:
    - name: Load CSV data from spotify_creds.csv
      # Reads the CSV file and converts it into a list of dictionaries.
      set_fact:
        csv_data: "{{ lookup('file', 'spotify_creds.csv') | community.general.from_csv() }}"
      delegate_to: localhost
      run_once: true

  tasks:
    - name: Check if scraper-api directory exists
      ansible.builtin.stat:
        path: ~/async-scraper-api
      register: scraper_api_dir

    - name: Clone the scraper-api repository if it does not exist
      ansible.builtin.git:
        repo: 'https://github.com/Sejmou/async-scraper-api.git'
        dest: ~/async-scraper-api
        version: main
      when: not scraper_api_dir.stat.exists

    - name: Pull latest code
      ansible.builtin.command:
        cmd: git pull
      args:
        chdir: '~/async-scraper-api'
      when: scraper_api_dir.stat.exists

    - name: Update .env file with latest values from control node
      ansible.builtin.copy:
        src: .env
        dest: ~/async-scraper-api/api-server/.env

    - name: Set host-specific credentials from CSV
      # This sets host-specific facts by indexing into csv_data using the host's position
      set_fact:
        client_id: "{{ csv_data[ groups['scrapers'].index(inventory_hostname) | int ].client_id }}"
        client_secret: "{{ csv_data[ groups['scrapers'].index(inventory_hostname) | int ].client_secret }}"
      vars:
        host_index: "{{ ansible_play_batch.index(inventory_hostname) }}"

    - name: Remove the directory for api-client-config.yml
      ansible.builtin.file:
        path: /home/wucloud/async-scraper-api/api-server/api-client-config.yml
        state: absent
      become: true

    - name: Copy the api-client-config.yml file to the host
      template:
        src: templates/api-client-config.yml.j2
        dest: ~/async-scraper-api/api-server/api-client-config.yml

    - name: Build Docker Compose project
      ansible.builtin.command:
        cmd: docker compose build
      args:
        chdir: '~/async-scraper-api/api-server'

    - name: Stop running Docker Compose project
      ansible.builtin.command:
        cmd: docker compose stop
      args:
        chdir: '~/async-scraper-api/api-server'

    - name: Start Docker Compose project
      ansible.builtin.command:
        cmd: docker compose up -d
      args:
        chdir: '~/async-scraper-api/api-server'
